(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global.Rainbow=factory());}(this,function(){'use strict';function isNode$1(){return typeof module!=='undefined'&&typeof module.exports==='object';}function isWorker$1(){return typeof document==='undefined'&&typeof self!=='undefined';}function getLanguageForBlock(block){var language=block.getAttribute('data-language')||block.parentNode.getAttribute('data-language');if(!language){var pattern=/\blang(?:uage)?-(\w+)/;var match=block.className.match(pattern)||block.parentNode.className.match(pattern);if(match){language=match[1];}}if(language){return language.toLowerCase();}return null;}function hasCompleteOverlap(start1,end1,start2,end2){if(start2===start1&&end2===end1){return false;}return start2<=start1&&end2>=end1;}function htmlEntities(code){return code.replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/&(?![\w\#]+;)/g,'&amp;');}function indexOfGroup(match,groupNumber){var index=0;for(var i=1;i<groupNumber;++i){if(match[i]){index+=match[i].length;}}return index;}function intersects(start1,end1,start2,end2){if(start2>=start1&&start2<end1){return true;}return end2>start1&&end2<end1;}function keys(object){var locations=[];for(var location in object){if(object.hasOwnProperty(location)){locations.push(location);}}return locations.sort(function(a,b){return b-a;});}function replaceAtPosition(position,replace,replaceWith,code){var subString=code.substr(position);return code.substr(0,position)+subString.replace(replace,replaceWith);}function createWorker(fn,Prism){if(isNode$1()){global.Worker=require('webworker-threads').Worker;return new Worker(__filename);}var prismFunction=Prism.toString();var code=keys.toString();code+=htmlEntities.toString();code+=hasCompleteOverlap.toString();code+=intersects.toString();code+=replaceAtPosition.toString();code+=indexOfGroup.toString();code+=prismFunction;var fullString=code+"\tthis.onmessage="+(fn.toString());var blob=new Blob([fullString],{type:'text/javascript'});return new Worker((window.URL||window.webkitURL).createObjectURL(blob));}var Prism=function Prism(options){var replacements={};var currentLanguage;var replacementPositions={};function _matchIsInsideOtherMatch(start,end){for(var key in replacementPositions){key=parseInt(key,10);if(hasCompleteOverlap(key,replacementPositions[key],start,end)){delete replacementPositions[key];delete replacements[key];}if(intersects(key,replacementPositions[key],start,end)){return true;}}return false;}function _wrapCodeInSpan(name,code){var className=name.replace(/\./g,' ');var globalClass=options.globalClass;if(globalClass){className+=" "+globalClass;}return("<span class=\""+className+"\">"+code+"</span>");}function _processReplacements(code){var positions=keys(replacements);for(var i=0,list=positions;i<list.length;i+=1){var position=list[i];var replacement=replacements[position];code=replaceAtPosition(position,replacement.replace,replacement.with,code);}return code;}function _cloneRegex(regex){var flags='';if(regex.ignoreCase){flags+='i';}if(regex.multiline){flags+='m';}return new RegExp(regex.source,flags);}function _processPattern(pattern,code,offset){if(offset===void 0)offset=0;var regex=pattern.pattern;if(!regex){return false;}var shouldStop=!regex.global;regex=_cloneRegex(regex);var match=regex.exec(code);if(!match){return false;}if(!pattern.name&&pattern.matches&&typeof pattern.matches[0]==='string'){pattern.name=pattern.matches[0];delete pattern.matches[0];}var replacement=match[0];var startPos=match.index+offset;var endPos=match[0].length+startPos;if(startPos===endPos){return false;}if(_matchIsInsideOtherMatch(startPos,endPos)){return{remaining:code.substr(endPos-offset),offset:endPos};}function onMatchSuccess(repl){if(pattern.name){repl=_wrapCodeInSpan(pattern.name,repl);}replacements[startPos]={'replace':match[0],'with':repl};replacementPositions[startPos]=endPos;if(shouldStop){return false;}return{remaining:code.substr(endPos-offset),offset:endPos};}function _processGroup(groupKey){var block=match[groupKey];if(!block){return;}var group=pattern.matches[groupKey];var language=group.language;var groupToProcess=group.name&&group.matches?group.matches:group;var _getReplacement=function(passedBlock,replaceBlock,matchName){replacement=replaceAtPosition(indexOfGroup(match,groupKey),passedBlock,matchName?_wrapCodeInSpan(matchName,replaceBlock):replaceBlock,replacement);return;};if(typeof group==='string'){_getReplacement(block,block,group);return;}var localCode;var prism=new Prism(options);if(language){localCode=prism.refract(block,language);_getReplacement(block,localCode);return;}localCode=prism.refract(block,currentLanguage,groupToProcess.length?groupToProcess:[groupToProcess]);_getReplacement(block,localCode,group.matches?group.name:0);}var groupKeys=keys(pattern.matches);for(var i=0,list=groupKeys;i<list.length;i+=1){var groupKey=list[i];_processGroup(groupKey);}return onMatchSuccess(replacement);}function _processCodeWithPatterns(code,patterns){for(var i=0,list=patterns;i<list.length;i+=1){var pattern=list[i];var result=_processPattern(pattern,code);while(result){result=_processPattern(pattern,result.remaining,result.offset);}}return _processReplacements(code);}function getPatternsForLanguage(language){var patterns=options.patterns[language]||[];while(options.inheritenceMap[language]){language=options.inheritenceMap[language];patterns=patterns.concat(options.patterns[language]||[]);}return patterns;}function _highlightBlockForLanguage(code,language,patterns){currentLanguage=language;patterns=patterns||getPatternsForLanguage(language);return _processCodeWithPatterns(htmlEntities(code),patterns);}this.refract=_highlightBlockForLanguage;};function rainbowWorker(e){var message=e.data;var prism=new Prism(message.options);var result=prism.refract(message.code,message.lang);function _reply(){self.postMessage({id:message.id,lang:message.lang,result:result});}if(message.isNode){_reply();self.close();return;}setTimeout(function(){_reply();},message.options.delay*1000);}var patterns={};var inheritenceMap={};var aliases={};var Rainbow={};var onHighlightCallback;var id=0;var isNode=isNode$1();var isWorker=isWorker$1();var cachedWorker=null;function _getWorker(){if(isNode||cachedWorker===null){cachedWorker=createWorker(rainbowWorker,Prism);}return cachedWorker;}function _messageWorker(message,callback){var worker=_getWorker();function _listen(e){if(e.data.id===message.id){callback(e.data);worker.removeEventListener('message',_listen);}}worker.addEventListener('message',_listen);worker.postMessage(message);}function _generateHandler(element,waitingOn,callback){return function _handleResponseFromWorker(data){element.innerHTML=data.result;element.classList.remove('loading');element.classList.add('rainbow-show');if(element.parentNode.tagName==='PRE'){element.parentNode.classList.remove('loading');element.parentNode.classList.add('rainbow-show');}if(onHighlightCallback){onHighlightCallback(element,data.lang);}if(--waitingOn.c===0){callback();}};}function _getPrismOptions(options){return{patterns:patterns,inheritenceMap:inheritenceMap,aliases:aliases,globalClass:options.globalClass,delay:!isNaN(options.delay)?options.delay:0};}function _getWorkerData(code,lang){var options={};if(typeof lang==='object'){options=lang;lang=options.language;}lang=aliases[lang]||lang;var workerData={id:id++,code:code,lang:lang,options:_getPrismOptions(options),isNode:isNode};return workerData;}function _highlightCodeBlocks(codeBlocks,callback){var waitingOn={c:0};for(var i=0,list=codeBlocks;i<list.length;i+=1){var block=list[i];var language=getLanguageForBlock(block);if(block.classList.contains('rainbow')||!language){continue;}block.classList.add('loading');block.classList.add('rainbow');if(block.parentNode.tagName==='PRE'){block.parentNode.classList.add('loading');}var globalClass=block.getAttribute('data-global-class');var delay=parseInt(block.getAttribute('data-delay'),10);++waitingOn.c;_messageWorker(_getWorkerData(block.innerHTML,{language:language,globalClass:globalClass,delay:delay}),_generateHandler(block,waitingOn,callback));}if(waitingOn.c===0){callback();}}function _addPreloader(preBlock){var preloader=document.createElement('div');preloader.className='preloader';for(var i=0;i<7;i++){preloader.appendChild(document.createElement('div'));}preBlock.appendChild(preloader);}function _highlight(node,callback){callback=callback||function(){};node=node&&typeof node.getElementsByTagName==='function'?node:document;var preBlocks=node.getElementsByTagName('pre');var codeBlocks=node.getElementsByTagName('code');var finalPreBlocks=[];var finalCodeBlocks=[];for(var i=0,list=preBlocks;i<list.length;i+=1){var preBlock=list[i];_addPreloader(preBlock);if(preBlock.getElementsByTagName('code').length){if(!preBlock.getAttribute('data-trimmed')){preBlock.setAttribute('data-trimmed',true);preBlock.innerHTML=preBlock.innerHTML.trim();}continue;}finalPreBlocks.push(preBlock);}for(var i$1=0,list$1=codeBlocks;i$1<list$1.length;i$1+=1){var codeBlock=list$1[i$1];finalCodeBlocks.push(codeBlock);}_highlightCodeBlocks(finalCodeBlocks.concat(finalPreBlocks),callback);}function onHighlight(callback){onHighlightCallback=callback;}function extend(language,languagePatterns,inherits){if(!inheritenceMap[language]){inheritenceMap[language]=inherits;}patterns[language]=languagePatterns.concat(patterns[language]||[]);}function remove(language){delete inheritenceMap[language];delete patterns[language];}function color(){var args=[],len=arguments.length;while(len--)args[len]=arguments[len];if(typeof args[0]==='string'){var workerData=_getWorkerData(args[0],args[1]);_messageWorker(workerData,(function(cb){return function(data){if(cb){cb(data.result,data.lang);}};}(args[2])));return;}if(typeof args[0]==='function'){_highlight(0,args[0]);return;}_highlight(args[0],args[1]);}function addAlias(alias,originalLanguage){aliases[alias]=originalLanguage;}Rainbow={extend:extend,remove:remove,onHighlight:onHighlight,addAlias:addAlias,color:color};if(isNode){Rainbow.colorSync=function(code,lang){var workerData=_getWorkerData(code,lang);var prism=new Prism(workerData.options);return prism.refract(workerData.code,workerData.lang);};}if(!isNode&&!isWorker){document.addEventListener('DOMContentLoaded',function(event){if(!Rainbow.defer){Rainbow.color(event);}},false);}if(isWorker){self.onmessage=rainbowWorker;}var Rainbow$1=Rainbow;return Rainbow$1;}));